using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Animation;
using System.Windows.Shapes;
using Microsoft.Phone.Controls;
using Newtonsoft.Json;
using System.Text.RegularExpressions;
using Microsoft.Phone.Tasks;

namespace Ebaa
{
    public partial class MainPage : PhoneApplicationPage
    {
 
        // Constructor
        public MainPage()
        {
            InitializeComponent();

            // Set the data context of the listbox control to the sample data
            DataContext = App.ViewModel;
            this.Loaded += new RoutedEventHandler(MainPage_Loaded);
        }

        // Load data for the ViewModel Items
        private void MainPage_Loaded(object sender, RoutedEventArgs e)
        {
            if (!App.ViewModel.IsDataLoaded)
            {
                App.ViewModel.LoadData();
            }
        }

        private void btnSearchClicked(object sender, System.Windows.RoutedEventArgs e)
        {
            // GET call = http://svcs.ebay.com/services/search/FindingService/v1?OPERATION-NAME=findItemsAdvanced&SERVICE-VERSION=1.0.0&GLOBAL-ID=EBAY-GB&SECURITY-APPNAME=JanneVis-5492-4df9-8755-33362e9698f1&keywords=Dark+elf&paginationInput.entriesPerPage=10&sortOrder=StartTimeNewest&itemFilter(0).name=ListingType&itemFilter(0).value=FixedPrice&itemFilter(1).name=MinPrice&itemFilter(1).value=0.00&itemFilter(2).name=MaxPrice&itemFilter(2).value=25.00&affiliate.networkId=9&affiliate.trackingId=1234567890&affiliate.customId=456&RESPONSE-DATA-FORMAT=XML 


            String urlString = "http://svcs.ebay.com/services/search/FindingService/v1?OPERATION-NAME=findItemsAdvanced&SERVICE-VERSION=1.0.0&GLOBAL-ID=EBAY-GB&SECURITY-APPNAME=JanneVis-5492-4df9-8755-33362e9698f1";
            urlString += "&keywords=" + txtBoxQuery.Text;
            urlString += "&paginationInput.entriesPerPage=" + txtBoxResults.Text;
            urlString += "&sortOrder=StartTimeNewest";
            urlString += "&itemFilter(0).name=ListingType";
            urlString += "&itemFilter(0).value=FixedPrice";
            urlString += "&itemFilter(1).name=MinPrice";
            urlString += "&itemFilter(1).value=" + txtBoxMinPrice.Text;
            urlString += "&itemFilter(2).name=MaxPrice";
            urlString += "&itemFilter(2).value=" + txtBoxMaxPrice.Text;
            urlString += "&affiliate.networkId=9";
            urlString += "&affiliate.trackingId=1234567890";
            urlString += "&affiliate.customId=456";
            urlString += "&RESPONSE-DATA-FORMAT=JSON";


            Uri url = new Uri(urlString);

            WebClient webClient = new WebClient();

            webClient.DownloadStringAsync(url);
            webClient.DownloadStringCompleted +=new DownloadStringCompletedEventHandler(webClient_DownloadStringCompleted);

        }

        void webClient_DownloadStringCompleted(object sender, DownloadStringCompletedEventArgs e)
        {
            //throw new NotImplementedException();
            lboxResult.Items.Clear();

            // Siivotaan json vastauksesta @ merkit pois. Ebayn api on nimettyn jotkin
            // muuttujat siten että alkavat @-merkillä. Tämä ei kuitankaan oikein
            // toimi tämän ohjelman kannalta, joten siivotaan ne pois. Tämän
            // jälkeen parsiminen onnnistuu.
            string pattern = "@";
            Regex rgx = new Regex(pattern);
            string tmp = rgx.Replace(e.Result.ToString(), "");
            
            // parsitaan JSON RootObjecteiksi
            RootObject dataa = (RootObject)JsonConvert.DeserializeObject<RootObject>(tmp);

            //List<Item> itemList = new List<Item>();

            // koska JSON palauttaa listoja, niin käydään listojen kaikki alkiot läpi
            // näin monta sisäkkäistä, koska tulos ketjuttuu mukavasti.
            // item on se mitä me halutaan tarkemmin tutkia, eli yksittäinen myynnissä oleva
            // esine.
            foreach (FindItemsAdvancedResponse res in dataa.findItemsAdvancedResponse)
            {
                foreach (SearchResult searchResult in res.searchResult)
                {
                    foreach (Item item in searchResult.item)
                    {
                        lboxResult.Items.Add(item);
                    }
                }
            }
            //lboxResult.ItemsSource = itemList;
        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            WebBrowserTask webBrowserTask = new WebBrowserTask();
            webBrowserTask.Uri = new Uri("http://www.google.com", UriKind.Absolute);
            webBrowserTask.Show();
        }
    }

    // Tästä alkaa JSON parserin tarvitsemat luokat
    // näihin ei ole tehty itse muuta kuinta poistettu
    // @-merkit muuttujien nimistä. Ne tuli automaattisesti
    // json2csharp.com sivun avulla, mutta aiheuttivat ongelmia
    // json syötteestä poimitaan myös @merkit pois ennen
    // parsimista
    public class PrimaryCategory
    {
        public List<string> categoryId { get; set; }
        public List<string> categoryName { get; set; }
    }

    public class SecondaryCategory
    {
        public List<string> categoryId { get; set; }
        public List<string> categoryName { get; set; }
    }

    public class ShippingServiceCost
    {
        public string __invalid_name__currencyId { get; set; }
        public string __value__ { get; set; }
    }

    public class ShippingInfo
    {
        public List<ShippingServiceCost> shippingServiceCost { get; set; }
        public List<string> shippingType { get; set; }
        public List<string> shipToLocations { get; set; }
    }

    public class CurrentPrice
    {
        public string currencyId { get; set; }
        public string __value__ { get; set; }
    }

    public class ConvertedCurrentPrice
    {
        public string __invalid_name__currencyId { get; set; }
        public string __value__ { get; set; }
    }

    public class SellingStatu
    {
        public List<CurrentPrice> currentPrice { get; set; }
        public List<ConvertedCurrentPrice> convertedCurrentPrice { get; set; }
        public List<string> sellingState { get; set; }
        public List<string> timeLeft { get; set; }
    }

    public class ListingInfo
    {
        public List<string> bestOfferEnabled { get; set; }
        public List<string> buyItNowAvailable { get; set; }
        public List<string> startTime { get; set; }
        public List<string> endTime { get; set; }
        public List<string> listingType { get; set; }
        public List<string> gift { get; set; }
    }

    public class Condition
    {
        public List<string> conditionId { get; set; }
        public List<string> conditionDisplayName { get; set; }
    }

    public class ProductId
    {
        public string __invalid_name__type { get; set; }
        public string __value__ { get; set; }
    }

    public class Item
    {
        public List<string> itemId { get; set; }
        public List<string> title { get; set; }
        public List<string> globalId { get; set; }
        public List<PrimaryCategory> primaryCategory { get; set; }
        public List<SecondaryCategory> secondaryCategory { get; set; }
        public List<string> galleryURL { get; set; }
        public List<string> viewItemURL { get; set; }
        public List<string> paymentMethod { get; set; }
        public List<string> autoPay { get; set; }
        public List<string> location { get; set; }
        public List<string> country { get; set; }
        public List<ShippingInfo> shippingInfo { get; set; }
        public List<SellingStatu> sellingStatus { get; set; }
        public List<ListingInfo> listingInfo { get; set; }
        public List<Condition> condition { get; set; }
        public List<string> isMultiVariationListing { get; set; }
        public List<string> topRatedListing { get; set; }
        public List<ProductId> productId { get; set; }
        public List<string> postalCode { get; set; }
    }

    public class SearchResult
    {
        public string __invalid_name__count { get; set; }
        public List<Item> item { get; set; }
    }

    public class PaginationOutput
    {
        public List<string> pageNumber { get; set; }
        public List<string> entriesPerPage { get; set; }
        public List<string> totalPages { get; set; }
        public List<string> totalEntries { get; set; }
    }

    public class FindItemsAdvancedResponse
    {
        public List<string> ack { get; set; }
        public List<string> version { get; set; }
        public List<string> timestamp { get; set; }
        public List<SearchResult> searchResult { get; set; }
        public List<PaginationOutput> paginationOutput { get; set; }
        public List<string> itemSearchURL { get; set; }
    }

    public class RootObject
    {
        public List<FindItemsAdvancedResponse> findItemsAdvancedResponse { get; set; }
    }
}
